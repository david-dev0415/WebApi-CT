//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CtReportsEntities : DbContext
    {
        public CtReportsEntities()
            : base("name=CtReportsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<HistoryCollection> HistoryCollection { get; set; }
        public virtual DbSet<HistoryRealTime> HistoryRealTime { get; set; }
        public virtual DbSet<Partner> Partner { get; set; }
        public virtual DbSet<RegistryRealTime> RegistryRealTime { get; set; }
        public virtual DbSet<Route> Route { get; set; }
        public virtual DbSet<Sector> Sector { get; set; }
        public virtual DbSet<Vehicle> Vehicle { get; set; }
        public virtual DbSet<Consolidate> Consolidate { get; set; }
    
        public virtual ObjectResult<SPConsolidated_Result> SPConsolidated(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPConsolidated_Result>("SPConsolidated", idParameter);
        }
    
        public virtual ObjectResult<SPConsolidatedPerDateVehicle_Result> SPConsolidatedPerDateVehicle(string day, string month, string year, string id)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPConsolidatedPerDateVehicle_Result>("SPConsolidatedPerDateVehicle", dayParameter, monthParameter, yearParameter, idParameter);
        }
    
        public virtual ObjectResult<SPDetailedByVehicle_Result> SPDetailedByVehicle(string numberId, string dateStart, string dateFinal)
        {
            var numberIdParameter = numberId != null ?
                new ObjectParameter("numberId", numberId) :
                new ObjectParameter("numberId", typeof(string));
    
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(string));
    
            var dateFinalParameter = dateFinal != null ?
                new ObjectParameter("dateFinal", dateFinal) :
                new ObjectParameter("dateFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPDetailedByVehicle_Result>("SPDetailedByVehicle", numberIdParameter, dateStartParameter, dateFinalParameter);
        }
    }
}
